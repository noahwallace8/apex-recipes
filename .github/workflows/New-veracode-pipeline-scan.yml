name: Veracode Scan Workflow

on:
  schedule:
    - cron: "0 0 1 * *"
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.MYGITHUB_TOKEN }}

      - name: Find and zip last modified source file(s)
        id: zip_modified
        run: |
          last_modified_files=$(git ls-files -m)
          echo "Last modified files: $last_modified_files"
          if [ -z "$last_modified_files" ]; then
            echo "No modified files found. Packaging all files for pipeline scan."
            zip last_modified_files.zip $(ls)
          else
            echo "Zipping modified files: $last_modified_files"
            zip last_modified_files.zip $last_modified_files
          fi
          echo "zipfile=last_modified_files.zip" >> $GITHUB_ENV

      - name: List contents of zip
        run: |
          unzip -l last_modified_files.zip

      - name: Upload zip file
        uses: actions/upload-artifact@v4
        with:
          name: last_modified_files.zip
          path: last_modified_files.zip

  pipeline_scan:
    if: github.ref != 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    name: Pipeline Scan
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.MYGITHUB_TOKEN }}

      - name: Get archive
        uses: actions/download-artifact@v3
        with:
          name: last_modified_files.zip

      - name: Pipeline-scan action step
        id: pipeline-scan
        uses: veracode/Veracode-pipeline-scan-action@pipeline-scan-beta-v0.0.4
        with:
          vid: ${{ secrets.API_ID }}
          vkey: ${{ secrets.API_KEY }}
          file: "last_modified_files.zip"
          fail_build: false
          fail_on_severity: 'high'

      - name: Check for filtered results
        id: check_filtered_results
        run: |
          if [ -f filtered_results.json ]; then
            echo "filtered_results.json exists."
            echo "exists=true" >> $GITHUB_ENV
          else
            echo "filtered_results.json does not exist."
            echo "exists=false" >> $GITHUB_ENV
          fi

      - name: Upload filtered results
        if: env.exists == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: filtered-results
          path: filtered_results.json

  veracode_upload_and_scan:
    if: github.ref == 'refs/heads/main' || github.event_name == 'schedule'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.MYGITHUB_TOKEN }}

      - name: Zip entire repository excluding .github/workflows
        run: |
          zip -r repo.zip . -x "*.github/workflows/*"

      - name: List contents of zip
        run: |
          unzip -l repo.zip

      - name: Upload zip file
        uses: actions/upload-artifact@v4
        with:
          name: repo.zip
          path: repo.zip

      - name: Remove existing repo.zip
        run: |
          rm -f repo.zip

      - name: Get archive
        uses: actions/download-artifact@v4
        with:
          name: repo.zip
          path: repo.zip

      - name: Veracode Upload And Scan
        uses: veracode/veracode-uploadandscan-action@0.2.6
        with:
          appname: ${{ github.event.repository.name }}
          createprofile: true
          filepath: "repo.zip"
          version: ${{ github.run_id }}
          vid: ${{ secrets.API_ID }}
          vkey: ${{ secrets.API_KEY }}
          criticality: 'Low'
          # createsandbox: true
          # sandboxname: ${{ github.event.repository.name }} - Sandbox

  import_issues:
    if: github.ref != 'refs/heads/main'
    needs: pipeline_scan
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.MYGITHUB_TOKEN }}

      - name: Get scan results
        if: env.exists == 'true'
        uses: actions/download-artifact@v4
        with:
          name: filtered-results

      - name: Veracode scan results to GitHub issues Action
        if: env.exists == 'true'
        uses: veracode/veracode-flaws-to-issues@v2.2.24
        with:
          scan-results-json: 'filtered_results.json'
